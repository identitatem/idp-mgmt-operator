
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  name: identityproviders.identitatem.io
spec:
  group: identitatem.io
  names:
    kind: IdentityProvider
    listKind: IdentityProviderList
    plural: identityproviders
    singular: identityprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IdentityProvider is the Schema for the strategies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IdentityProviderSpec defines the desired state of IdentityProvider
            properties:
              github:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make generate-clients" to regenerate code after
                  modifying this file github enables user authentication using GitHub
                  credentials'
                properties:
                  ca:
                    description: ca is an optional reference to a config map by name
                      containing the PEM-encoded CA bundle. It is used as a trust
                      anchor to validate the TLS certificate presented by the remote
                      server. The key "ca.crt" is used to locate the data. If specified
                      and the config map or expected key is not found, the identity
                      provider is not honored. If the specified ca data is not valid,
                      the identity provider is not honored. If empty, the default
                      system roots are used. This can only be configured when hostname
                      is set to a non-empty value. The namespace for this config map
                      is openshift-config.
                    properties:
                      name:
                        description: name is the metadata.name of the referenced config
                          map
                        type: string
                    required:
                    - name
                    type: object
                  clientID:
                    description: clientID is the oauth client ID
                    type: string
                  clientSecret:
                    description: clientSecret is a required reference to the secret
                      by name containing the oauth client secret. The key "clientSecret"
                      is used to locate the data. If the secret or expected key is
                      not found, the identity provider is not honored. The namespace
                      for this secret is openshift-config.
                    properties:
                      name:
                        description: name is the metadata.name of the referenced secret
                        type: string
                    required:
                    - name
                    type: object
                  hostname:
                    description: hostname is the optional domain (e.g. "mycompany.com")
                      for use with a hosted instance of GitHub Enterprise. It must
                      match the GitHub Enterprise settings value configured at /setup/settings#hostname.
                    type: string
                  organizations:
                    description: organizations optionally restricts which organizations
                      are allowed to log in
                    items:
                      type: string
                    type: array
                  teams:
                    description: teams optionally restricts which teams are allowed
                      to log in. Format is <org>/<team>.
                    items:
                      type: string
                    type: array
                type: object
              google:
                description: google enables user authentication using Google credentials
                properties:
                  clientID:
                    description: clientID is the oauth client ID
                    type: string
                  clientSecret:
                    description: clientSecret is a required reference to the secret
                      by name containing the oauth client secret. The key "clientSecret"
                      is used to locate the data. If the secret or expected key is
                      not found, the identity provider is not honored. The namespace
                      for this secret is openshift-config.
                    properties:
                      name:
                        description: name is the metadata.name of the referenced secret
                        type: string
                    required:
                    - name
                    type: object
                  hostedDomain:
                    description: hostedDomain is the optional Google App domain (e.g.
                      "mycompany.com") to restrict logins to
                    type: string
                type: object
              htpasswd:
                description: htpasswd enables user authentication using an HTPasswd
                  file to validate credentials
                properties:
                  fileData:
                    description: fileData is a required reference to a secret by name
                      containing the data to use as the htpasswd file. The key "htpasswd"
                      is used to locate the data. If the secret or expected key is
                      not found, the identity provider is not honored. If the specified
                      htpasswd data is not valid, the identity provider is not honored.
                      The namespace for this secret is openshift-config.
                    properties:
                      name:
                        description: name is the metadata.name of the referenced secret
                        type: string
                    required:
                    - name
                    type: object
                type: object
              ldap:
                description: ldap enables user authentication using LDAP credentials
                properties:
                  attributes:
                    description: attributes maps LDAP attributes to identities
                    properties:
                      email:
                        description: email is the list of attributes whose values
                          should be used as the email address. Optional. If unspecified,
                          no email is set for the identity
                        items:
                          type: string
                        type: array
                      id:
                        description: id is the list of attributes whose values should
                          be used as the user ID. Required. First non-empty attribute
                          is used. At least one attribute is required. If none of
                          the listed attribute have a value, authentication fails.
                          LDAP standard identity attribute is "dn"
                        items:
                          type: string
                        type: array
                      name:
                        description: name is the list of attributes whose values should
                          be used as the display name. Optional. If unspecified, no
                          display name is set for the identity LDAP standard display
                          name attribute is "cn"
                        items:
                          type: string
                        type: array
                      preferredUsername:
                        description: preferredUsername is the list of attributes whose
                          values should be used as the preferred username. LDAP standard
                          login attribute is "uid"
                        items:
                          type: string
                        type: array
                    type: object
                  bindDN:
                    description: bindDN is an optional DN to bind with during the
                      search phase.
                    type: string
                  bindPassword:
                    description: bindPassword is an optional reference to a secret
                      by name containing a password to bind with during the search
                      phase. The key "bindPassword" is used to locate the data. If
                      specified and the secret or expected key is not found, the identity
                      provider is not honored. The namespace for this secret is openshift-config.
                    properties:
                      name:
                        description: name is the metadata.name of the referenced secret
                        type: string
                    required:
                    - name
                    type: object
                  ca:
                    description: ca is an optional reference to a config map by name
                      containing the PEM-encoded CA bundle. It is used as a trust
                      anchor to validate the TLS certificate presented by the remote
                      server. The key "ca.crt" is used to locate the data. If specified
                      and the config map or expected key is not found, the identity
                      provider is not honored. If the specified ca data is not valid,
                      the identity provider is not honored. If empty, the default
                      system roots are used. The namespace for this config map is
                      openshift-config.
                    properties:
                      name:
                        description: name is the metadata.name of the referenced config
                          map
                        type: string
                    required:
                    - name
                    type: object
                  insecure:
                    description: 'insecure, if true, indicates the connection should
                      not use TLS WARNING: Should not be set to `true` with the URL
                      scheme "ldaps://" as "ldaps://" URLs always          attempt
                      to connect using TLS, even when `insecure` is set to `true`
                      When `true`, "ldap://" URLS connect insecurely. When `false`,
                      "ldap://" URLs are upgraded to a TLS connection using StartTLS
                      as specified in https://tools.ietf.org/html/rfc2830.'
                    type: boolean
                  url:
                    description: 'url is an RFC 2255 URL which specifies the LDAP
                      search parameters to use. The syntax of the URL is: ldap://host:port/basedn?attribute?scope?filter'
                    type: string
                type: object
              openID:
                description: openID enables user authentication using OpenID credentials
                properties:
                  ca:
                    description: ca is an optional reference to a config map by name
                      containing the PEM-encoded CA bundle. It is used as a trust
                      anchor to validate the TLS certificate presented by the remote
                      server. The key "ca.crt" is used to locate the data. If specified
                      and the config map or expected key is not found, the identity
                      provider is not honored. If the specified ca data is not valid,
                      the identity provider is not honored. If empty, the default
                      system roots are used. The namespace for this config map is
                      openshift-config.
                    properties:
                      name:
                        description: name is the metadata.name of the referenced config
                          map
                        type: string
                    required:
                    - name
                    type: object
                  claims:
                    description: claims mappings
                    properties:
                      email:
                        description: email is the list of claims whose values should
                          be used as the email address. Optional. If unspecified,
                          no email is set for the identity
                        items:
                          type: string
                        type: array
                      name:
                        description: name is the list of claims whose values should
                          be used as the display name. Optional. If unspecified, no
                          display name is set for the identity
                        items:
                          type: string
                        type: array
                      preferredUsername:
                        description: preferredUsername is the list of claims whose
                          values should be used as the preferred username. If unspecified,
                          the preferred username is determined from the value of the
                          sub claim
                        items:
                          type: string
                        type: array
                    type: object
                  clientID:
                    description: clientID is the oauth client ID
                    type: string
                  clientSecret:
                    description: clientSecret is a required reference to the secret
                      by name containing the oauth client secret. The key "clientSecret"
                      is used to locate the data. If the secret or expected key is
                      not found, the identity provider is not honored. The namespace
                      for this secret is openshift-config.
                    properties:
                      name:
                        description: name is the metadata.name of the referenced secret
                        type: string
                    required:
                    - name
                    type: object
                  extraAuthorizeParameters:
                    additionalProperties:
                      type: string
                    description: extraAuthorizeParameters are any custom parameters
                      to add to the authorize request.
                    type: object
                  extraScopes:
                    description: extraScopes are any scopes to request in addition
                      to the standard "openid" scope.
                    items:
                      type: string
                    type: array
                  issuer:
                    description: issuer is the URL that the OpenID Provider asserts
                      as its Issuer Identifier. It must use the https scheme with
                      no query or fragment component.
                    type: string
                type: object
            type: object
          status:
            description: IdentityProviderStatus defines the observed state of IdentityProvider
            properties:
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make generate-clients" to regenerate
                  code after modifying this file Conditions contains the different
                  condition statuses for this AuthRealm.'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
